     1                                  %include "boot.inc"
     2                              <1> ;-------------	 loader和kernel   ----------
     3                              <1> 
     4                              <1> LOADER_BASE_ADDR equ 0x900
     5                              <1> LOADER_STACK_TOP equ LOADER_BASE_ADDR
     6                              <1> LOADER_START_SECTOR equ 0x2
     7                              <1> 
     8                              <1> KERNEL_BIN_BASE_ADDR equ 0x70000
     9                              <1> KERNEL_START_SECTOR equ 0x9
    10                              <1> KERNEL_ENTRY_POINT equ 0xc0001500
    11                              <1> 
    12                              <1> ;-------------   页表配置   ----------------
    13                              <1> PAGE_DIR_TABLE_POS equ 0x100000
    14                              <1> 
    15                              <1> ;--------------   gdt描述符属性  -------------
    16                              <1> DESC_G_4K   equ	  1_00000000000000000000000b   
    17                              <1> DESC_D_32   equ	   1_0000000000000000000000b
    18                              <1> DESC_L	    equ	    0_000000000000000000000b	;  64位代码标记，此处标记为0便可。
    19                              <1> DESC_AVL    equ	     0_00000000000000000000b	;  cpu不用此位，暂置为0  
    20                              <1> DESC_LIMIT_CODE2  equ 1111_0000000000000000b
    21                              <1> DESC_LIMIT_DATA2  equ DESC_LIMIT_CODE2
    22                              <1> DESC_LIMIT_VIDEO2  equ 0000_000000000000000b
    23                              <1> DESC_P	    equ		  1_000000000000000b
    24                              <1> DESC_DPL_0  equ		   00_0000000000000b
    25                              <1> DESC_DPL_1  equ		   01_0000000000000b
    26                              <1> DESC_DPL_2  equ		   10_0000000000000b
    27                              <1> DESC_DPL_3  equ		   11_0000000000000b
    28                              <1> DESC_S_CODE equ		     1_000000000000b
    29                              <1> DESC_S_DATA equ	  DESC_S_CODE
    30                              <1> DESC_S_sys  equ		     0_000000000000b
    31                              <1> DESC_TYPE_CODE  equ	      1000_00000000b	;x=1,c=0,r=0,a=0 代码段是可执行的,非依从的,不可读的,已访问位a清0.  
    32                              <1> DESC_TYPE_DATA  equ	      0010_00000000b	;x=0,e=0,w=1,a=0 数据段是不可执行的,向上扩展的,可写的,已访问位a清0.
    33                              <1> 
    34                              <1> DESC_CODE_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + DESC_LIMIT_CODE2 + DESC_P + DESC_DPL_0 + DESC_S_CODE + DESC_TYPE_CODE + 0x00
    35                              <1> DESC_DATA_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + DESC_LIMIT_DATA2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + DESC_TYPE_DATA + 0x00
    36                              <1> DESC_VIDEO_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + DESC_LIMIT_VIDEO2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + DESC_TYPE_DATA + 0x0b
    37                              <1> 
    38                              <1> ;--------------   选择子属性  ---------------
    39                              <1> RPL0  equ   00b
    40                              <1> RPL1  equ   01b
    41                              <1> RPL2  equ   10b
    42                              <1> RPL3  equ   11b
    43                              <1> TI_GDT	 equ   000b
    44                              <1> TI_LDT	 equ   100b
    45                              <1> 
    46                              <1> ;----------------   页表相关属性    --------------
    47                              <1> PG_P  equ   1b
    48                              <1> PG_RW_R	 equ  00b 
    49                              <1> PG_RW_W	 equ  10b 
    50                              <1> PG_US_S	 equ  000b 
    51                              <1> PG_US_U	 equ  100b 
    52                              <1> 
    53                              <1> 
    54                              <1> ;-------------  program type 定义   --------------
    55                              <1> PT_NULL equ 0
     2                                  section mbr vstart=0x7c00
     3                                  start:
     4 00000000 8CC8                    	mov ax, cs		;改用这种写法初始化所有段寄存器
     5 00000002 8ED8                    	mov ds, ax
     6 00000004 8EC0                    	mov es, ax
     7 00000006 8ED0                    	mov ss, ax
     8 00000008 8EE0                    	mov fs, ax
     9 0000000A BC007C                  	mov sp, 0x7c00
    10 0000000D B800B8                  	mov ax, 0xb800
    11 00000010 8EE8                    	mov gs, ax
    12                                  	
    13 00000012 B80006                  	mov ax, 0x600	;清屏
    14 00000015 BB0007                  	mov bx, 0x700
    15 00000018 B90000                  	mov cx, 0
    16 0000001B BA4F18                  	mov dx, 0x184f
    17 0000001E CD10                    	int 0x10
    18                                  	
    19 00000020 65C60600004D            	mov byte [gs:0x00], 'M'
    20 00000026 65C606010007            	mov byte [gs:0x01], 0x07
    21 0000002C 65C606020042            	mov byte [gs:0x02], 'B'
    22 00000032 65C606030007            	mov byte [gs:0x03], 0x07
    23 00000038 65C606040052            	mov byte [gs:0x04], 'R'
    24 0000003E 65C606050007            	mov byte [gs:0x05], 0x07
    25                                  
    26                                  	
    27 00000044 66B802000000            	mov eax, LOADER_START_SECTOR
    28 0000004A BB0009                  	mov bx , LOADER_BASE_ADDR
    29 0000004D B90400                  	mov cx , 4					;读入loader所需扇区数
    30 00000050 E80300                  	call rd_disk_m_16
    31                                  	
    32 00000053 E9(000C)                	jmp LOADER_BASE_ADDR + 0x300
    33                                  
    34                                  ;--------------------------------------
    35                                  ;eax = LBA
    36                                  ;bx  = 目的地址
    37                                  ;cx  = 要读入的扇区数
    38                                  rd_disk_m_16:
    39                                  	;备份
    40 00000056 6689C6                  	mov esi, eax
    41 00000059 89CF                    	mov di,  cx
    42                                  	
    43                                  	;1.设置扇区数
    44 0000005B BAF201                  	mov dx,  0x1f2
    45 0000005E 88C8                    	mov al,  cl
    46 00000060 EE                      	out dx,  al
    47 00000061 6689F0                  	mov eax, esi	;恢复
    48                                  	
    49                                  	;2.设置LBA，每次8位
    50 00000064 BAF301                  	mov dx,  0x1f3
    51 00000067 EE                      	out dx,  al
    52                                  	
    53 00000068 B108                    	mov cl,  8
    54 0000006A 66D3E8                  	shr eax, cl
    55 0000006D BAF401                  	mov dx,  0x1f4
    56 00000070 EE                      	out dx,  al
    57                                  	
    58 00000071 66D3E8                  	shr eax, cl
    59 00000074 BAF501                  	mov dx,  0x1f5
    60 00000077 EE                      	out dx,  al
    61                                  	
    62 00000078 66D3E8                  	shr eax, cl
    63 0000007B 240F                    	and al,  0x0f
    64 0000007D 0CE0                    	or  al,  0xe0
    65 0000007F BAF601                  	mov dx,  0x1f6
    66 00000082 EE                      	out dx,  al
    67                                  	
    68                                  	;3.读命令0x20
    69 00000083 BAF701                  	mov dx,  0x1f7
    70 00000086 B020                    	mov al,  0x20
    71 00000088 EE                      	out dx,  al
    72                                  	
    73                                  	;4.检测硬盘状态
    74                                  not_ready:
    75 00000089 90                      	nop
    76 0000008A EC                      	in  al,  dx
    77 0000008B 2488                    	and al,  0x88
    78 0000008D 3C08                    	cmp al,  0x08	; bit7=1:busy
    79 0000008F 75F8                    	jnz not_ready
    80                                  	
    81                                  	;5.读数据
    82 00000091 89F8                    	mov ax,  di		;扇区数
    83 00000093 BA0001                  	mov dx,  256
    84 00000096 F7E2                    	mul dx
    85 00000098 89C1                    	mov cx,  ax		;每次读一个字，次数=扇区数*512/2
    86 0000009A BAF001                  	mov dx,  0x1f0
    87                                  go_on_read:
    88 0000009D ED                      	in  ax,   dx
    89 0000009E 8907                    	mov [bx], ax
    90 000000A0 83C302                  	add bx,   2
    91 000000A3 E2F8                    	loop go_on_read
    92 000000A5 C3                      	ret
    93                                  	
    94                                  current:
    95 000000A6 00<rep 158h>            	times 510 - (current-start) db 0
    96                                  
    97 000001FE 55AA                    dw 0xaa55
